uniform float4 iMouse;           // Mouse drag pos=.xy Click pos=.zw (pixels)
uniform float  iTime;            // Shader playback time (s)
uniform float2 iResolution;      // Viewport resolution (pixels)
uniform float2 iImageResolution; // iImage1 resolution (pixels)
uniform shader iImage1;          // Texture
uniform float2 iOffset;          // Top-left corner of DrawingRect
uniform float2 iOrigin;          // Mouse drag started here

/// <summary>
/// Applies the iconic Teal & Orange Hollywood blockbuster look
/// </summary>
/// <param name="color">Input RGB color</param>
/// <returns>Teal & Orange graded color</returns>
half3 tealOrangeGrade(half3 color) {
    float luminance = dot(color, half3(0.299, 0.587, 0.114));
    
    // Create teal/orange mask based on original color temperature
    float warmMask = smoothstep(0.3, 0.7, color.r / max(color.b + 0.001, 0.001));
    
    // Orange tone for warm areas (skin, fire, sunlight)
    half3 orangeTone = half3(1.2, 0.9, 0.6);
    
    // Teal tone for cool areas (sky, water, shadows)
    half3 tealTone = half3(0.4, 0.8, 1.0);
    
    // Blend between teal and orange based on warmMask
    half3 colorTone = mix(tealTone, orangeTone, warmMask);
    
    // Apply the tone while preserving original luminance
    half3 gradedColor = color * colorTone;
    
    // Preserve luminance
    float newLuminance = dot(gradedColor, half3(0.299, 0.587, 0.114));
    gradedColor *= luminance / max(newLuminance, 0.001);
    
    // Boost contrast slightly
    gradedColor = (gradedColor - 0.5) * 1.15 + 0.5;
    
    // Slight saturation boost
    half3 finalColor = mix(half3(luminance), gradedColor, 1.3);
    
    return clamp(finalColor, 0.0, 1.0);
}

half4 main(float2 fragCoord) 
{	
    float2 renderingScale = iImageResolution.xy / iResolution.xy;
    float2 inputCoord = (fragCoord - iOffset) * renderingScale;
    
    half4 originalColor = iImage1.eval(inputCoord);
    
    half3 gradedColor = tealOrangeGrade(originalColor.rgb);
    
    return half4(gradedColor, originalColor.a);
}